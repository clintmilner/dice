{"version":3,"sources":["Die.js","App.js","reportWebVitals.js","index.js"],"names":["classMap","1","2","3","4","5","6","Dot","idx","className","buildDots","count","Die","App","useState","roll","setRoll","generateRoll","one","Math","floor","random","two","onClick","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAEMA,G,MAAW,CAACC,EAAG,MAAOC,EAAG,MAAOC,EAAG,QAASC,EAAG,OAAQC,EAAG,OAAQC,EAAG,QACrEC,EAAM,SAACC,GAAD,OAAS,qBAAeC,UAAU,OAAfD,IACzBE,EAAY,SAACC,GACf,OAAQA,GACJ,KAAK,EACD,OAAO,cAAC,EAAD,IAEX,KAAK,EACD,OAAO,qCAAE,cAAC,EAAD,IAAM,cAAC,EAAD,OAEnB,KAAK,EACD,OAAO,qCAAE,cAAC,EAAD,IAAM,cAAC,EAAD,IAAM,cAAC,EAAD,OAEzB,KAAK,EACD,OAAO,qCACH,sBAAKF,UAAU,SAAf,UAAwB,cAAC,EAAD,IAAM,cAAC,EAAD,OAC9B,sBAAKA,UAAU,SAAf,UAAwB,cAAC,EAAD,IAAM,cAAC,EAAD,UAGtC,KAAK,EACD,OAAO,qCACH,sBAAKA,UAAU,SAAf,UAAwB,cAAC,EAAD,IAAM,cAAC,EAAD,OAC9B,qBAAKA,UAAU,SAAf,SAAwB,cAAC,EAAD,MACxB,sBAAKA,UAAU,SAAf,UAAwB,cAAC,EAAD,IAAM,cAAC,EAAD,UAGtC,KAAK,EACD,OAAO,qCACH,sBAAKA,UAAU,SAAf,UAAwB,cAAC,EAAD,IAAM,cAAC,EAAD,IAAM,cAAC,EAAD,OACpC,sBAAKA,UAAU,SAAf,UAAwB,cAAC,EAAD,IAAM,cAAC,EAAD,IAAM,cAAC,EAAD,YAUrCG,EALH,SAAC,GAAa,IAAZD,EAAW,EAAXA,MACJF,EAAYT,EAASW,GAC3B,OAAQ,qBAAKF,UAAS,cAASA,GAAvB,SAAqCC,EAAUC,MCZ5CE,MArBf,WAAgB,IAAD,EACaC,mBAAS,CAAC,EAAG,IAD1B,mBACJC,EADI,KACEC,EADF,KAGLC,EAAe,WACjB,IAAMC,EAAMC,KAAKC,MAAuB,EAAhBD,KAAKE,UAAiB,EACxCC,EAAMH,KAAKC,MAAuB,EAAhBD,KAAKE,UAAgB,EAC7CL,EAAQ,CAACE,EAAKI,KAGlB,OACI,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,OAAOc,QAASN,EAA/B,kBACA,sBAAKR,UAAU,OAAf,UACI,cAAC,EAAD,CAAKE,MAAOI,EAAK,KACjB,cAAC,EAAD,CAAKJ,MAAOI,EAAK,QAErB,qBAAKN,UAAU,OAAOe,KAAK,SAASD,QAASN,EAA7C,sBCTGQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36deac56.chunk.js","sourcesContent":["import React from 'react'\n\nconst classMap = {1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six'}\nconst Dot = (idx) => <div key={idx} className=\"dot\"/>\nconst buildDots = (count) => {\n    switch (count) {\n        case 1: {\n            return <Dot/>\n        }\n        case 2: {\n            return <><Dot/><Dot/></>\n        }\n        case 3: {\n            return <><Dot/><Dot/><Dot/></>\n        }\n        case 4: {\n            return <>\n                <div className=\"column\"><Dot/><Dot/></div>\n                <div className=\"column\"><Dot/><Dot/></div>\n            </>\n        }\n        case 5: {\n            return <>\n                <div className=\"column\"><Dot/><Dot/></div>\n                <div className=\"column\"><Dot/></div>\n                <div className=\"column\"><Dot/><Dot/></div>\n            </>\n        }\n        case 6: {\n            return <>\n                <div className=\"column\"><Dot/><Dot/><Dot/></div>\n                <div className=\"column\"><Dot/><Dot/><Dot/></div>\n            </>\n        }\n    }\n}\nconst Die = ({count}) => {\n    const className = classMap[count]\n    return (<div className={`die ${className}`}>{buildDots(count)}</div>)\n}\n\nexport default Die","import './App.css';\nimport React, {useState} from 'react'\nimport Die from \"./Die\";\n\n\nfunction App() {\n    const [roll, setRoll] = useState([1, 1])\n\n    const generateRoll = () => {\n        const one = Math.floor((Math.random() * 6)) + 1\n        const two = Math.floor((Math.random() * 6))+ 1\n        setRoll([one, two])\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"roll\" onClick={generateRoll}>ROLL</div>\n            <div className=\"dice\">\n                <Die count={roll[0]}/>\n                <Die count={roll[1]}/>\n            </div>\n            <div className=\"roll\" role=\"button\" onClick={generateRoll}>ROLL</div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}